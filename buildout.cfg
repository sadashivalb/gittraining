[buildout]
extends =

download-cache        =  ${buildout:directory}/downloads
newest                =  false
allow-picked-versions =  true
include-site-packages =  false
exec-sitecustomize    =  false
log-level             =  INFO
unzip                 =  true
ignore-existing       =  true
parts =
#        pylint
        zope2
#        instance
#        zopepy
#       test
        pep8
        autopep8
        boto
        django 
#        djangoprod
        pytest
        Chameleon
#       mysql
#       zeoserver
#       instance
        mycronjob
#       python-oracle
#       cx_Oracle
        pyflakes
#       buildmaster
#       autocheck
        jre_download
        jre_install
        Flask
#       Python
        jetty-download
        jenkins-download
        jenkins
        run_jenkins
#       interpreter
#       test
#       gettext

versions = versions

[versions]
z3c.recipe.scripts = 1.0.1
pylint = 0.25.1
nosetests = 1.1.2
pep8 = 1.2
autopep8 = 0.6.4 
pytest = 2.2.4
boto = 2.4.1
zope.pagetemplate = 3.6.3
django = 1.4
grokcore.chameleon = 1.0.2
Chameleon = 2.9.2
salt = 0.10.1
paramiko = 1.7.7.2
zc.recipe.egg = 1.3.2
mxodbc = 0.3
collective.recipe.template = 1.9
z3c.recipe.usercrontab = 1.1
pyflakes = 0.5.0
collective.buildbot = 0.4.1
zope.interface = 4.0.1
autocheck  = 0.1.0
python-termstyle = 0.1.10
blend = 0.0.1
cement = 1.9.12
Coffin = 0.3.6
collective.recipe.cmd = 0.5
cElementTree =  1.0.2-20050302
collective.recipe.cmd = 0.5
HTMLTemplate  = 1.5.0
htmlfilter = 0.2
Flask = 0.9
#Python = 2.4.4
iboto =  0.20.1
jenkinsapi = 0.1.11

[pylint]
recipe = zc.recipe.egg
eggs = pylint
       ${zope2:eggs}
       lockfile
entry-points = pylint=pylint.lint:Run
arguments = sys.argv[1:]

[zope2]
recipe = z3c.recipe.scripts
interpreter = zopepy
eggs =
        boto
        blend
        cement
        Coffin
        cElementTree
        HTMLTemplate
        htmlfilter
        Flask
#        Python
        iboto
        jenkinsapi




[Chameleon]
recipe = zc.recipe.egg
Chameleon = git git://github.com/malthe/chameleon.git

[pep8]
recipe = zc.recipe.egg
eggs = pep8
entry-points = pep8=pep8:_main
args = ['--exclude=.hg,buildout,*.pt.py', '--ignore="NOTHING"', '../designhub']
scripts = pep8
initialization = sys.argv.extend(${pep8:args})

[autopep8]
recipe = zc.recipe.egg
eggs = autopep8

[boto]
recipe = zc.recipe.egg
eggs = boto

[django]
recipe = zc.recipe.egg
eggs = django
interpreter = django 
#recipe = djangorecipe
#version = 0.20
#settings = development
#project = project 

[djangoprod]
recipe = djangorecipe
version = ${django:version}
settings = production
wsgi = true
project = ${django:project}

[pytest]
recipe = zc.recipe.egg
eggs = pytest

[test]
recipe = zc.recipe.testrunner
eggs = zope.pagetemplate [test]

[test]
recipe = pbp.recipe.noserunner

[mysql]
recipe = zest.recipe.mysql
url = http://surfnet.dl.sourceforge.net/sourceforge/mysql-python/MySQL-python-1.2.2.tar.gz
mysql-python = http://pypi.python.org/packages/source/z/zest.recipe.mysql/zest.recipe.mysql-1.0.4.zip#md5=9e7c964019757ee820aa57e4e58f9678
mysql-python-url = http://surfnet.dl.sourceforge.net/sourceforge/mysql-python/MySQL-python-1.2.2.tar.gz

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = 8100

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs = ${buildout:eggs} my.package
products = ${buildout:directory}/products
zcml = my.package

[mycronjob]
recipe = z3c.recipe.usercrontab
times = 0 12 * * *
command = echo nothing happens at noon


[python-oracle]
recipe = hexagonit.recipe.download
url = http://download.oracle.com/otn/linux/instantclient/11203/instantclient-basic-linux-11.2.0.3.0.zip
destination = ${buildout:directory}
iclocation = ${buildout:directory}/instantclient_11_2
ignore-existing = true


[cx_Oracle]
recipe = zc.recipe.egg:custom
egg = cx_Oracle

[pyflakes]
recipe = zc.recipe.egg
egg = pyflakes


[buildmaster]
recipe = collective.buildbot:master
project-name = Plone4Bio
project-url = http://plone4bio.org
port = 8999
wport = 9000
url = http://plone4bio.org/buildbot
#slaves =
    localhost ${secret:password-trunk}
allow-force = True
max-builds = 4

[jre_download]
recipe = hexagonit.recipe.download
url = http://download.oracle.com/otn-pub/java/jdk/6u25-b06/jre-6u25-linux-i586.bin
#destination = {buildout:bin-directory}
download-only = true
ignore-existing = true

[jre_install]
recipe = iw.recipe.cmd
on_install = true
on_update = true
shell = bash
cmds =
               chmod +x ${jre_download:location}/jre-6u26-linux-i586.bin
               cd ${buildout:directory};if [[ -e "jre1.6.0_26" ]]; then echo -n; else ${jre_download:location}/jre-6u26-linux-i586.bin; fi

[Flask]
recipe = collective.recipe.cmd
url = http://pypi.python.org/packages/source/F/Flask/Flask-0.9.tar.gz
download-only = true
ignore-existing = true

[Python]
recipe = iw.recipe.cmd
url = http://python.org/ftp/python/2.4.4/Python-2.4.4.tar.bz2
location = ${buildout:download-cache}
destination = ${buildout:download-cache}
download-only = true
ignore-existing = true


[jetty-download]
recipe = hexagonit.recipe.download
url = http://ftp.osuosl.org/pub/eclipse/jetty/stable-7/dist/jetty-distribution-7.6.4.v20120524.tar.gz
strip-top-level-dir = true

[jenkins-download]
recipe = hexagonit.recipe.download
url = http://mirrors.jenkins-ci.org/war/1.397/jenkins.war
destination = {buildout:downloads}
download-only = true


[jenkins]
recipe = jarn.jenkins
jetty-location = ${jetty-download:location}
jenkins-location = ${jenkins-download:location}


[run_jenkins]
recipe = collective.recipe.template
input = inline:
        export JENKINS_HOME=${buildout:directory}
        [ ! -d ${buildout:directory}/var/log ] && mkdir -p ${buildout:directory}/var/log
        ${buildout:directory}/jre1.6.0_26/bin/java -Dmail.smtp.localhost=${:smtp_host} -jar downloads/jenkins.war --httpPort=${:http_port} --logfile=${:logfile} --daemon
output = ${buildout:bin-directory}/run_jenkins.sh
smtp_host = mail.gmail.com
http_port = 9876
logfile = ${buildout:directory}/var/log/jenkins.log
mode = 777


[interpreter]
recipe = zc.recipe.egg
eggs = megrok.jinja
interpreter = python

[test]
recipe = zc.recipe.testrunner
eggs = megrok.jinja
defaults = ['--tests-pattern', '^f?tests$', '-v']

[gettext]
recipe = cc.gettext:msgfmt
po_path = src/megrok/jinja/ftests/locales/po
mo_path = src/megrok/jinja/ftests/locales/mo

